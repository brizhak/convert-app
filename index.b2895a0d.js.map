{"mappings":"uDAEA,IAAIA,ECFJC,EAAiBC,KAAKC,MAAM,8gB,IDc5BC,EAVgB,CAACC,EAAUC,EAAUC,KACnC,QAAgCC,IAA5BC,EAAAR,GAAMK,GAAUC,GAEb,CACLP,EAAOS,EAAAR,GAAMK,GAAUC,GAEvB,OADeF,EAAWL,C,CAH1BU,MAAM,wC,MEAVC,EANmB,CAACC,EAAUP,EAAUC,EAAUC,EAAQM,KACxDD,EAASE,YAAc,MAAMT,KAAYC,KAAYO,EAAOE,QAC1D,MACGR,GAAQ,ECAf,MAAMS,EAAWC,SAASC,eAAe,UACnCC,EAASF,SAASC,eAAe,mBAEvC,IAAIE,EAoBJD,EAAOE,iBAAiB,UAlBPC,MAAMC,IACrBA,EAAEC,iBACF,MAAMnB,EAAWY,SAASC,eAAe,YAAYO,MAC/CnB,EAAWW,SAASC,eAAe,YAAYO,MAC/ClB,EAASU,SAASC,eAAe,UAAUO,MAE7CnB,IAAaC,EACfG,MAAM,yCAENU,QAAehB,EAAQC,EAAUC,EAAUC,QAG9BC,IAAXY,GACFT,EAAWK,EAAUX,EAAUC,EAAUC,EAAQa,GAEnDD,EAAOO,OAAO","sources":["src/scripts/convert-distance.js","src/scripts/rules.json","src/scripts/show-result.js","src/scripts/handler-submit.js"],"sourcesContent":["import rules from './rules.json';\n\nlet rule;\n\nconst convert = (distance, fromUnit, toUnit) => {\n  if (rules[fromUnit][toUnit] === undefined) {\n    alert('Select the unit of measure to convert');\n  } else {\n    rule = rules[fromUnit][toUnit];\n    const result = distance * rule;\n    return result;\n  }\n};\n\nexport default convert;\n","{\n  \"km\": {\n    \"m\": 1000,\n    \"cm\": 100000,\n    \"in\": 39370.1,\n    \"ft\": 3280.84,\n    \"mm\": 1000000,\n    \"yd\": 1094\n  },\n  \"m\": {\n    \"cm\": 100,\n    \"in\": 39.37,\n    \"ft\": 3.281,\n    \"km\": 0.001,\n    \"mm\": 1000,\n    \"yd\": 1.094\n  },\n  \"cm\": {\n    \"m\": 0.01,\n    \"in\": 0.3937,\n    \"ft\": 0.0328,\n    \"km\": 0.00001,\n    \"mm\": 10,\n    \"yd\": 0.01094\n  },\n  \"mm\": {\n    \"m\": 0.001,\n    \"cm\": 0.1,\n    \"in\": 0.03937,\n    \"ft\": 0.00328,\n    \"km\": 0.000001,\n    \"yd\": 0.00109\n  },\n  \"in\": {\n    \"m\": 0.0254,\n    \"cm\": 2.54,\n    \"ft\": 0.0833,\n    \"km\": 0.0000254,\n    \"mm\": 25.4,\n    \"yd\": 0.0278\n  },\n  \"ft\": {\n    \"m\": 0.3048,\n    \"cm\": 30.48,\n    \"in\": 12,\n    \"km\": 0.0003048,\n    \"mm\": 304.8,\n    \"yd\": 0.3333\n  },\n  \"yd\": {\n    \"m\": 0.9144,\n    \"cm\": 91.44,\n    \"in\": 36,\n    \"ft\": 3,\n    \"km\": 0.0009144,\n    \"mm\": 914.4\n  }\n}","const showResult = (resultEl, distance, fromUnit, toUnit, result) => {\n  resultEl.textContent = `At ${distance} ${fromUnit} ${result.toFixed(\n    2\n  )} ${toUnit}`;\n};\n\nexport default showResult;\n","import convert from './convert-distance';\nimport showResult from './show-result';\n\nconst resultEl = document.getElementById('result');\nconst formEl = document.getElementById('conversion-form');\n\nlet result;\n\nconst onSubmit = async e => {\n  e.preventDefault();\n  const distance = document.getElementById('distance').value;\n  const fromUnit = document.getElementById('fromUnit').value;\n  const toUnit = document.getElementById('toUnit').value;\n\n  if (fromUnit === toUnit) {\n    alert('Select the unit of measure to convert');\n  } else {\n    result = await convert(distance, fromUnit, toUnit);\n  }\n\n  if (result !== undefined) {\n    showResult(resultEl, distance, fromUnit, toUnit, result);\n  }\n  formEl.reset();\n};\n\nformEl.addEventListener('submit', onSubmit);\n"],"names":["$80aea8f4dc7150cc$var$rule","$645379f7f08ba830$exports","JSON","parse","$80aea8f4dc7150cc$export$2e2bcd8739ae039","distance","fromUnit","toUnit","undefined","$parcel$interopDefault","alert","$c98c689cc0c9dc43$export$2e2bcd8739ae039","resultEl","result","textContent","toFixed","$1f852755ac95434d$var$resultEl","document","getElementById","$1f852755ac95434d$var$formEl","$1f852755ac95434d$var$result","addEventListener","async","e","preventDefault","value","reset"],"version":3,"file":"index.b2895a0d.js.map"}